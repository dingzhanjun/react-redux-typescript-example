{"ast":null,"code":"var _jsxFileName = \"/Users/jding/BitBucket/react-redux-typescript-example/src/components/common/GroupButton.tsx\";\nimport * as React from 'react';\n\nconst ButtonGroup = (_ref) => {\n  let onClick = _ref.onClick,\n      children = _ref.children;\n  const count = React.Children.count(children);\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.Children.map(children, (child, i) => {\n    let groupPosition = '';\n\n    if (i === 0) {\n      groupPosition = 'first';\n    } else if (i === count - 1) {\n      groupPosition = 'last';\n    }\n\n    return React.cloneElement(child, {\n      groupPosition,\n      onClick\n    });\n  }));\n};\n\nexport default ButtonGroup;","map":{"version":3,"sources":["/Users/jding/BitBucket/react-redux-typescript-example/src/components/common/GroupButton.tsx"],"names":["React","ButtonGroup","onClick","children","count","Children","map","child","i","groupPosition","cloneElement"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAOA,MAAMC,WAAuC,GAAG,UAA2B;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACzE,QAAMC,KAAK,GAAGJ,KAAK,CAACK,QAAN,CAAeD,KAAf,CAAqBD,QAArB,CAAd;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,CAACI,KAAD,EAA4BC,CAA5B,KAA0C;AACtE,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAID,CAAC,KAAK,CAAV,EAAa;AACXC,MAAAA,aAAa,GAAG,OAAhB;AACD,KAFD,MAEO,IAAID,CAAC,KAAKJ,KAAK,GAAG,CAAlB,EAAqB;AAC1BK,MAAAA,aAAa,GAAG,MAAhB;AACD;;AACD,WAAOT,KAAK,CAACU,YAAN,CAAmBH,KAAnB,EAA0B;AAAEE,MAAAA,aAAF;AAAiBP,MAAAA;AAAjB,KAA1B,CAAP;AACD,GARA,CADH,CADF;AAaD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\n\ntype ButtonGroupProps = {\n  onClick: () => void;\n  children: React.ReactElement[];\n};\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({ onClick, children }) => {\n  const count = React.Children.count(children);\n  return (\n    <span>\n      {React.Children.map(children, (child: React.ReactElement, i: number) => {\n        let groupPosition = '';\n        if (i === 0) {\n          groupPosition = 'first';\n        } else if (i === count - 1) {\n          groupPosition = 'last';\n        }\n        return React.cloneElement(child, { groupPosition, onClick });\n      })}\n    </span>\n  );\n};\n\nexport default ButtonGroup;\n"]},"metadata":{},"sourceType":"module"}