{"ast":null,"code":"import _slicedToArray from \"/Users/jding/BitBucket/react-redux-typescript-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jding/BitBucket/react-redux-typescript-example/src/components/common/GoTop.tsx\";\nimport * as React from 'react';\nimport styled from '../../utils/styled';\n\nconst GoTop = props => {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        intervalId = _React$useState2[0],\n        setIntervalId = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        test = _React$useState4[0],\n        setTest = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        position = _React$useState6[0],\n        setPosition = _React$useState6[1];\n\n  React.useEffect(() => {\n    document.addEventListener('scroll', () => {\n      if (window.scrollY > 200) {\n        setPosition(true);\n      } else {\n        setPosition(false);\n      }\n    });\n    window.scrollTo(0, 0);\n  }, []);\n\n  const onScrollStep = e => {\n    if (window.pageYOffset === 0) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    window.scroll(0, window.pageYOffset - props.scrollStepInPx);\n  };\n\n  const scrollToTop = () => {\n    setTest(100);\n    const id = setInterval(onScrollStep, props.delayInMs);\n    setIntervalId(id);\n    console.log(intervalId);\n    setIntervalId(oldId => {\n      clearInterval(oldId);\n      return id;\n    });\n  };\n\n  const renderGoTopIcon = () => {\n    if (position) {\n      return React.createElement(Button, {\n        className: \"go-top\",\n        onClick: scrollToTop,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Go Top\");\n    }\n\n    return null;\n  };\n\n  return React.createElement(React.Fragment, null, renderGoTopIcon());\n};\n\nconst Button = styled('button')`\n  border: 0;\n  border-radius: 10px 0 0 10px;\n  position: fixed;\n  cursor: pointer;\n  bottom: 30px;\n  right: 0px;\n  color: white;\n  background-color: ${props => props.theme.colors.brand};\n  z-index: 1;\n  width: 90px;\n  text-align: center;\n  height: 45px;\n  line-height: 45px;\n  transition: 0.5s;\n`;\nexport default GoTop;","map":{"version":3,"sources":["/Users/jding/BitBucket/react-redux-typescript-example/src/components/common/GoTop.tsx"],"names":["React","styled","GoTop","props","useState","intervalId","setIntervalId","test","setTest","position","setPosition","useEffect","document","addEventListener","window","scrollY","scrollTo","onScrollStep","e","pageYOffset","clearInterval","scroll","scrollStepInPx","scrollToTop","id","setInterval","delayInMs","console","log","oldId","renderGoTopIcon","Button","theme","colors","brand"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAOA,MAAMC,KAA4B,GAAIC,KAAD,IAAwB;AAAA,0BACvBH,KAAK,CAACI,QAAN,CAAe,IAAf,CADuB;AAAA;AAAA,QACpDC,UADoD;AAAA,QACxCC,aADwC;;AAAA,2BAEnCN,KAAK,CAACI,QAAN,CAAe,CAAf,CAFmC;AAAA;AAAA,QAEpDG,IAFoD;AAAA,QAE9CC,OAF8C;;AAAA,2BAG3BR,KAAK,CAACI,QAAN,CAAe,KAAf,CAH2B;AAAA;AAAA,QAGpDK,QAHoD;AAAA,QAG1CC,WAH0C;;AAK3DV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,MAAM;AACxC,UAAIC,MAAM,CAACC,OAAP,GAAiB,GAArB,EAA0B;AACxBL,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,KAND;AAOAI,IAAAA,MAAM,CAACE,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GATD,EASG,EATH;;AAWA,QAAMC,YAAY,GAAIC,CAAD,IAAY;AAC/B,QAAIJ,MAAM,CAACK,WAAP,KAAuB,CAA3B,EAA8B;AAC5BC,MAAAA,aAAa,CAACf,UAAD,CAAb;AACA;AACD;;AACDS,IAAAA,MAAM,CAACO,MAAP,CAAc,CAAd,EAAiBP,MAAM,CAACK,WAAP,GAAqBhB,KAAK,CAACmB,cAA5C;AACD,GAND;;AAQA,QAAMC,WAAW,GAAG,MAAM;AACxBf,IAAAA,OAAO,CAAC,GAAD,CAAP;AACA,UAAMgB,EAAE,GAAGC,WAAW,CAACR,YAAD,EAAed,KAAK,CAACuB,SAArB,CAAtB;AACApB,IAAAA,aAAa,CAACkB,EAAD,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYvB,UAAZ;AAEAC,IAAAA,aAAa,CAACuB,KAAK,IAAI;AACrBT,MAAAA,aAAa,CAACS,KAAD,CAAb;AACA,aAAOL,EAAP;AACD,KAHY,CAAb;AAID,GAVD;;AAYA,QAAMM,eAAe,GAAG,MAAM;AAC5B,QAAIrB,QAAJ,EAAc;AACZ,aACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEc,WAApC;AAAiD,QAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AACD,WAAO,IAAP;AACD,GATD;;AAWA,SAAO,0CAAGO,eAAe,EAAlB,CAAP;AACD,CAhDD;;AAkDA,MAAMC,MAAM,GAAG9B,MAAM,CAAC,QAAD,CAAW;;;;;;;;sBAQVE,KAAK,IAAIA,KAAK,CAAC6B,KAAN,CAAYC,MAAZ,CAAmBC,KAAM;;;;;;;CARxD;AAiBA,eAAehC,KAAf","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\n\ntype ScrollProps = {\n  scrollStepInPx: number;\n  delayInMs: number;\n};\n\nconst GoTop: React.FC<ScrollProps> = (props: ScrollProps) => {\n  const [intervalId, setIntervalId] = React.useState(null);\n  const [test, setTest] = React.useState(0);\n  const [position, setPosition] = React.useState(false);\n\n  React.useEffect(() => {\n    document.addEventListener('scroll', () => {\n      if (window.scrollY > 200) {\n        setPosition(true);\n      } else {\n        setPosition(false);\n      }\n    });\n    window.scrollTo(0, 0);\n  }, []);\n\n  const onScrollStep = (e: any) => {\n    if (window.pageYOffset === 0) {\n      clearInterval(intervalId);\n      return;\n    }\n    window.scroll(0, window.pageYOffset - props.scrollStepInPx);\n  };\n\n  const scrollToTop = () => {\n    setTest(100);\n    const id = setInterval(onScrollStep, props.delayInMs);\n    setIntervalId(id);\n    console.log(intervalId);\n\n    setIntervalId(oldId => {\n      clearInterval(oldId);\n      return id;\n    });\n  };\n\n  const renderGoTopIcon = () => {\n    if (position) {\n      return (\n        <Button className=\"go-top\" onClick={scrollToTop} type=\"button\">\n          Go Top\n        </Button>\n      );\n    }\n    return null;\n  };\n\n  return <>{renderGoTopIcon()}</>;\n};\n\nconst Button = styled('button')`\n  border: 0;\n  border-radius: 10px 0 0 10px;\n  position: fixed;\n  cursor: pointer;\n  bottom: 30px;\n  right: 0px;\n  color: white;\n  background-color: ${props => props.theme.colors.brand};\n  z-index: 1;\n  width: 90px;\n  text-align: center;\n  height: 45px;\n  line-height: 45px;\n  transition: 0.5s;\n`;\n\nexport default GoTop;\n"]},"metadata":{},"sourceType":"module"}