{"ast":null,"code":"import _defineProperty from \"/Users/jding/BitBucket/react-redux-typescript-example/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TeamsActionTypes } from './types'; // Type-safe initialState!\n\nexport const initialState = {\n  data: [],\n  errors: undefined,\n  selected: undefined,\n  loading: false // Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n  // everything will remain type-safe.\n\n};\n\nconst reducer = function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TeamsActionTypes.FETCH_REQUEST:\n    case TeamsActionTypes.SELECT_TEAM:\n      {\n        return _objectSpread({}, state, {\n          loading: true\n        });\n      }\n\n    case TeamsActionTypes.FETCH_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          data: action.payload\n        });\n      }\n\n    case TeamsActionTypes.FETCH_ERROR:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          errors: action.payload\n        });\n      }\n\n    case TeamsActionTypes.SELECTED:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          selected: action.payload\n        });\n      }\n\n    case TeamsActionTypes.CLEAR_SELECTED:\n      {\n        return _objectSpread({}, state, {\n          selected: undefined\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}; // Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\n\n\nexport { reducer as teamsReducer };","map":{"version":3,"sources":["/Users/jding/BitBucket/react-redux-typescript-example/src/store/teams/reducer.ts"],"names":["TeamsActionTypes","initialState","data","errors","undefined","selected","loading","reducer","state","action","type","FETCH_REQUEST","SELECT_TEAM","FETCH_SUCCESS","payload","FETCH_ERROR","SELECTED","CLEAR_SELECTED","teamsReducer"],"mappings":";;;;;;AACA,SAAqBA,gBAArB,QAA6C,SAA7C,C,CAEA;;AACA,OAAO,MAAMC,YAAwB,GAAG;AACtCC,EAAAA,IAAI,EAAE,EADgC;AAEtCC,EAAAA,MAAM,EAAEC,SAF8B;AAGtCC,EAAAA,QAAQ,EAAED,SAH4B;AAItCE,EAAAA,OAAO,EAAE,KAJ6B,CAOxC;AACA;;AARwC,CAAjC;;AASP,MAAMC,OAA4B,GAAG,SAA/BA,OAA+B,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAgB,CAACW,aAAtB;AACA,SAAKX,gBAAgB,CAACY,WAAtB;AAAmC;AACjC,iCAAYJ,KAAZ;AAAmBF,UAAAA,OAAO,EAAE;AAA5B;AACD;;AACD,SAAKN,gBAAgB,CAACa,aAAtB;AAAqC;AACnC,iCAAYL,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,KAA5B;AAAmCJ,UAAAA,IAAI,EAAEO,MAAM,CAACK;AAAhD;AACD;;AACD,SAAKd,gBAAgB,CAACe,WAAtB;AAAmC;AACjC,iCAAYP,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,KAA5B;AAAmCH,UAAAA,MAAM,EAAEM,MAAM,CAACK;AAAlD;AACD;;AACD,SAAKd,gBAAgB,CAACgB,QAAtB;AAAgC;AAC9B,iCAAYR,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,KAA5B;AAAmCD,UAAAA,QAAQ,EAAEI,MAAM,CAACK;AAApD;AACD;;AACD,SAAKd,gBAAgB,CAACiB,cAAtB;AAAsC;AACpC,iCAAYT,KAAZ;AAAmBH,UAAAA,QAAQ,EAAED;AAA7B;AACD;;AACD;AAAS;AACP,eAAOI,KAAP;AACD;AAnBH;AAqBD,CAtBD,C,CAwBA;AACA;;;AACA,SAASD,OAAO,IAAIW,YAApB","sourcesContent":["import { Reducer } from 'redux'\nimport { TeamsState, TeamsActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: TeamsState = {\n  data: [],\n  errors: undefined,\n  selected: undefined,\n  loading: false\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<TeamsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case TeamsActionTypes.FETCH_REQUEST:\n    case TeamsActionTypes.SELECT_TEAM: {\n      return { ...state, loading: true }\n    }\n    case TeamsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case TeamsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    case TeamsActionTypes.SELECTED: {\n      return { ...state, loading: false, selected: action.payload }\n    }\n    case TeamsActionTypes.CLEAR_SELECTED: {\n      return { ...state, selected: undefined }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as teamsReducer }\n"]},"metadata":{},"sourceType":"module"}