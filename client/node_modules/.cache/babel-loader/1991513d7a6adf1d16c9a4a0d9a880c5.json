{"ast":null,"code":"var _jsxFileName = \"/Users/jding/BitBucket/react-redux-typescript-example/src/pages/heroes/index.tsx\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ButtonGroup from '../../components/common/GroupButton';\nimport styled from '../../utils/styled';\nimport Page from '../../components/layout/Page';\nimport Container from '../../components/layout/Container';\nimport DataTable from '../../components/layout/DataTable';\nimport LoadingOverlay from '../../components/data/LoadingOverlay';\nimport LoadingOverlayInner from '../../components/data/LoadingOverlayInner';\nimport LoadingSpinner from '../../components/data/LoadingSpinner';\nimport { fetchRequest } from '../../store/heroes/actions'; // Separate state props + dispatch props to their own interfaces.\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com';\n\nconst HeroesIndexPage = props => {\n  const loading = props.loading;\n  React.useEffect(() => {\n    fetchRequest();\n    /*\n    const { fetchRequest: fr } = props;\n    fr();\n    */\n  }, []);\n\n  const renderData = () => {\n    const data = props.data;\n    return React.createElement(DataTable, {\n      columns: ['Hero', 'Pro Picks/Bans*', 'Pro Wins*'],\n      widths: ['auto', '', ''],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, loading && data.length === 0 && React.createElement(HeroLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Loading...\")), data.map(hero => React.createElement(\"tr\", {\n      key: hero.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(HeroDetail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(HeroIcon, {\n      src: API_ENDPOINT + hero.icon,\n      alt: hero.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(HeroName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/heroes/${hero.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, hero.localized_name))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, hero.pro_pick || 0, \" / \", hero.pro_ban || 0), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, hero.pro_win || 0))));\n  };\n\n  const handleButtonClick = event => {\n    const btnIndex = parseInt(event.currentTarget.dataset.index, 10);\n\n    if (btnIndex === 0) {//\n    } else if (btnIndex === 1) {//\n    } else if (btnIndex === 2) {//\n    }\n  };\n\n  return React.createElement(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(ContentHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    onClick: handleButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Wha it is\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"How does it feel\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"What to do\"))), React.createElement(TableWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, loading && React.createElement(LoadingOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(LoadingOverlayInner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"*in last 30 days\")), renderData())));\n}; // It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\n\n\nconst mapStateToProps = (_ref) => {\n  let heroes = _ref.heroes;\n  return {\n    loading: heroes.loading,\n    errors: heroes.errors,\n    data: heroes.data\n  };\n}; // mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\n\n\nconst mapDispatchToProps = {\n  fetchRequest\n}; // Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroesIndexPage);\nconst ContentHeader = styled('div')`\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n`;\nconst TableWrapper = styled('div')`\n  position: relative;\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  min-height: 200px;\n`;\nconst HeroDetail = styled('td')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst HeroIcon = styled('img')`\n  width: 32px;\n  height: 32px;\n`;\nconst HeroName = styled('div')`\n  flex: 1 1 auto;\n  height: 100%;\n  margin-left: 1rem;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n`;\nconst HeroLoading = styled('tr')`\n  td {\n    height: 48px;\n    text-align: center;\n  }\n`;\n\nfunction btnRadius(param) {\n  const groupPosition = param.groupPosition;\n\n  if (groupPosition === 'first') {\n    return '5px 0 0 5px';\n  }\n\n  if (groupPosition === 'last') {\n    return '0 5px 5px 0';\n  }\n\n  return '0';\n}\n\nfunction btnLeftBorder(param) {\n  const groupPosition = param.groupPosition;\n\n  if (groupPosition === 'first') {\n    return '1px';\n  }\n\n  return '0';\n}\n\nconst Button = styled('button')`\n  border-radius: ${btnRadius};\n  border-right-width: 1px;\n  border-left-width: ${btnLeftBorder};\n  padding: 5px 15px;\n`;","map":{"version":3,"sources":["/Users/jding/BitBucket/react-redux-typescript-example/src/pages/heroes/index.tsx"],"names":["React","Link","connect","ButtonGroup","styled","Page","Container","DataTable","LoadingOverlay","LoadingOverlayInner","LoadingSpinner","fetchRequest","API_ENDPOINT","process","env","REACT_APP_API_ENDPOINT","HeroesIndexPage","props","loading","useEffect","renderData","data","length","map","hero","id","icon","name","localized_name","pro_pick","pro_ban","pro_win","handleButtonClick","event","btnIndex","parseInt","currentTarget","dataset","index","mapStateToProps","heroes","errors","mapDispatchToProps","ContentHeader","TableWrapper","theme","widths","md","HeroDetail","HeroIcon","HeroName","colors","brand","HeroLoading","btnRadius","param","groupPosition","btnLeftBorder","Button"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport ButtonGroup from '../../components/common/GroupButton';\n\nimport styled from '../../utils/styled';\nimport Page from '../../components/layout/Page';\nimport Container from '../../components/layout/Container';\nimport DataTable from '../../components/layout/DataTable';\nimport LoadingOverlay from '../../components/data/LoadingOverlay';\nimport LoadingOverlayInner from '../../components/data/LoadingOverlayInner';\nimport LoadingSpinner from '../../components/data/LoadingSpinner';\n\nimport { ApplicationState } from '../../store';\nimport { Hero } from '../../store/heroes/types';\nimport { fetchRequest } from '../../store/heroes/actions';\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean;\n  data: Hero[];\n  errors?: string;\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n  fetchRequest: typeof fetchRequest;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com';\n\nconst HeroesIndexPage: React.FC<AllProps> = (props: AllProps) => {\n  const { loading } = props;\n\n  React.useEffect(() => {\n    fetchRequest();\n    /*\n    const { fetchRequest: fr } = props;\n    fr();\n    */\n  }, []);\n\n  const renderData = () => {\n    const { data } = props;\n\n    return (\n      <DataTable columns={['Hero', 'Pro Picks/Bans*', 'Pro Wins*']} widths={['auto', '', '']}>\n        {loading && data.length === 0 && (\n          <HeroLoading>\n            <td colSpan={3}>Loading...</td>\n          </HeroLoading>\n        )}\n        {data.map(hero => (\n          <tr key={hero.id}>\n            <HeroDetail>\n              <HeroIcon src={API_ENDPOINT + hero.icon} alt={hero.name} />\n              <HeroName>\n                <Link to={`/heroes/${hero.name}`}>{hero.localized_name}</Link>\n              </HeroName>\n            </HeroDetail>\n            <td>\n              {hero.pro_pick || 0} / {hero.pro_ban || 0}\n            </td>\n            <td>{hero.pro_win || 0}</td>\n          </tr>\n        ))}\n      </DataTable>\n    );\n  };\n\n  const handleButtonClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    const btnIndex: number = parseInt(event.currentTarget.dataset.index, 10);\n    if (btnIndex === 0) {\n      //\n    } else if (btnIndex === 1) {\n      //\n    } else if (btnIndex === 2) {\n      //\n    }\n  };\n\n  return (\n    <Page>\n      <Container>\n        <ContentHeader>\n          <ButtonGroup onClick={handleButtonClick}>\n            <Button>Wha it is</Button>\n            <Button>How does it feel</Button>\n            <Button>What to do</Button>\n          </ButtonGroup>\n        </ContentHeader>\n        <TableWrapper>\n          {loading && (\n            <LoadingOverlay>\n              <LoadingOverlayInner>\n                <LoadingSpinner />\n              </LoadingOverlayInner>\n            </LoadingOverlay>\n          )}\n          <p>\n            <small>*in last 30 days</small>\n          </p>\n          {renderData()}\n        </TableWrapper>\n      </Container>\n    </Page>\n  );\n};\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ heroes }: ApplicationState) => ({\n  loading: heroes.loading,\n  errors: heroes.errors,\n  data: heroes.data\n});\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n  fetchRequest\n};\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeroesIndexPage);\n\nconst ContentHeader = styled('div')`\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst TableWrapper = styled('div')`\n  position: relative;\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  min-height: 200px;\n`;\n\nconst HeroDetail = styled('td')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst HeroIcon = styled('img')`\n  width: 32px;\n  height: 32px;\n`;\n\nconst HeroName = styled('div')`\n  flex: 1 1 auto;\n  height: 100%;\n  margin-left: 1rem;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n`;\n\nconst HeroLoading = styled('tr')`\n  td {\n    height: 48px;\n    text-align: center;\n  }\n`;\n\ntype GrouperParam = {\n  groupPosition?: string;\n};\nfunction btnRadius(param: GrouperParam) {\n  const { groupPosition } = param;\n  if (groupPosition === 'first') {\n    return '5px 0 0 5px';\n  }\n  if (groupPosition === 'last') {\n    return '0 5px 5px 0';\n  }\n  return '0';\n}\n\nfunction btnLeftBorder(param: GrouperParam) {\n  const { groupPosition } = param;\n  if (groupPosition === 'first') {\n    return '1px';\n  }\n  return '0';\n}\n\nconst Button = styled('button')`\n  border-radius: ${btnRadius};\n  border-right-width: 1px;\n  border-left-width: ${btnLeftBorder};\n  padding: 5px 15px;\n`;\n"]},"metadata":{},"sourceType":"module"}