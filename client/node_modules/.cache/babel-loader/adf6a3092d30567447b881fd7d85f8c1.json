{"ast":null,"code":"var _jsxFileName = \"/Users/jding/BitBucket/react-redux-typescript-example/src/components/layout/Header.tsx\";\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from '../../utils/styled';\nimport LayoutContainer from '../../containers/LayoutContainer';\nimport Container from './Container';\nconst Wrapper = styled('header')`\n  padding: 0.5rem 1.5rem;\n  background-color: ${props => props.theme.colors.brand};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fonts.headings};\n`;\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    flex-direction: row;\n  }\n`;\nconst HeaderLeft = styled('div')`\n  padding-right: 1rem;\n`;\nconst HeaderNav = styled('nav')`\n  flex: 1 1 auto;\n  margin: 1rem 0;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0;\n  }\n`;\nconst HeaderNavLink = styled(NavLink)`\n  margin: 0 1rem;\n\n  &.is-active {\n    text-decoration: underline;\n  }\n`;\nconst HeaderRight = styled('div')`\n  padding-left: 1rem;\n`;\nconst Title = styled('h2')`\n  margin: 0;\n  font-weight: 500;\n`;\nconst CurrentTheme = styled('span')`\n  margin-right: 1rem;\n`;\nconst ThemeSwitcherButton = styled('button')`\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  border: 1px solid ${props => props.theme.colors.white};\n  border-radius: 3px;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.brand};\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    color: ${props => props.theme.colors.white};\n  }\n`;\n\nconst Header = (_ref) => {\n  let title = _ref.title;\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(HeaderInner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(HeaderLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, title)), React.createElement(HeaderNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(HeaderNavLink, {\n    exact: true,\n    to: \"/\",\n    activeClassName: \"is-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Home\"), React.createElement(HeaderNavLink, {\n    to: \"/heroes\",\n    activeClassName: \"is-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Heroes\"), React.createElement(HeaderNavLink, {\n    to: \"/teams\",\n    activeClassName: \"is-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Teams\")), React.createElement(HeaderRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(LayoutContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, (_ref2) => {\n    let theme = _ref2.theme,\n        setTheme = _ref2.setTheme;\n    return React.createElement(React.Fragment, null, React.createElement(CurrentTheme, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Current theme: \", theme), React.createElement(ThemeSwitcherButton, {\n      onClick: () => setTheme(theme === 'light' ? 'dark' : 'light'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Switch theme\"));\n  }))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/jding/BitBucket/react-redux-typescript-example/src/components/layout/Header.tsx"],"names":["React","NavLink","styled","LayoutContainer","Container","Wrapper","props","theme","colors","brand","white","fonts","headings","HeaderInner","breakpoints","lg","HeaderLeft","HeaderNav","HeaderNavLink","HeaderRight","Title","CurrentTheme","ThemeSwitcherButton","Header","title","setTheme"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from '../../utils/styled'\nimport LayoutContainer from '../../containers/LayoutContainer'\nimport Container from './Container'\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Wrapper = styled('header')`\n  padding: 0.5rem 1.5rem;\n  background-color: ${props => props.theme.colors.brand};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fonts.headings};\n`\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    flex-direction: row;\n  }\n`\n\nconst HeaderLeft = styled('div')`\n  padding-right: 1rem;\n`\n\nconst HeaderNav = styled('nav')`\n  flex: 1 1 auto;\n  margin: 1rem 0;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0;\n  }\n`\n\nconst HeaderNavLink = styled(NavLink)`\n  margin: 0 1rem;\n\n  &.is-active {\n    text-decoration: underline;\n  }\n`\n\nconst HeaderRight = styled('div')`\n  padding-left: 1rem;\n`\n\nconst Title = styled('h2')`\n  margin: 0;\n  font-weight: 500;\n`\n\nconst CurrentTheme = styled('span')`\n  margin-right: 1rem;\n`\n\nconst ThemeSwitcherButton = styled('button')`\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  border: 1px solid ${props => props.theme.colors.white};\n  border-radius: 3px;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.brand};\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    color: ${props => props.theme.colors.white};\n  }\n`\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <Wrapper>\n    <HeaderInner>\n      <HeaderLeft>\n        <Title>{title}</Title>\n      </HeaderLeft>\n      <HeaderNav>\n        <HeaderNavLink exact to=\"/\" activeClassName=\"is-active\">\n          Home\n        </HeaderNavLink>\n        <HeaderNavLink to=\"/heroes\" activeClassName=\"is-active\">\n          Heroes\n        </HeaderNavLink>\n        <HeaderNavLink to=\"/teams\" activeClassName=\"is-active\">\n          Teams\n        </HeaderNavLink>\n      </HeaderNav>\n      <HeaderRight>\n        <LayoutContainer>\n          {({ theme, setTheme }) => (\n            <>\n              <CurrentTheme>Current theme: {theme}</CurrentTheme>\n              <ThemeSwitcherButton onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>Switch theme</ThemeSwitcherButton>\n            </>\n          )}\n        </LayoutContainer>\n      </HeaderRight>\n    </HeaderInner>\n  </Wrapper>\n)\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}