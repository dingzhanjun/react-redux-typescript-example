{"ast":null,"code":"import { action } from 'typesafe-actions';\nimport { TeamsActionTypes } from './types'; // Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\n\nexport const fetchRequest = () => action(TeamsActionTypes.FETCH_REQUEST);\nexport const clearSelected = () => action(TeamsActionTypes.CLEAR_SELECTED); // Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\n\nexport const fetchSuccess = data => action(TeamsActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = message => action(TeamsActionTypes.FETCH_ERROR, message);\nexport const selectTeam = teamId => action(TeamsActionTypes.SELECT_TEAM, teamId);\nexport const teamSelected = team => action(TeamsActionTypes.SELECTED, team);","map":{"version":3,"sources":["/Users/jding/BitBucket/react-redux-typescript-example/src/store/teams/actions.ts"],"names":["action","TeamsActionTypes","fetchRequest","FETCH_REQUEST","clearSelected","CLEAR_SELECTED","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR","selectTeam","teamId","SELECT_TEAM","teamSelected","team","SELECTED"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,gBAAT,QAA4D,SAA5D,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAMF,MAAM,CAACC,gBAAgB,CAACE,aAAlB,CAAjC;AACP,OAAO,MAAMC,aAAa,GAAG,MAAMJ,MAAM,CAACC,gBAAgB,CAACI,cAAlB,CAAlC,C,CAEP;AACA;;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAkBP,MAAM,CAACC,gBAAgB,CAACO,aAAlB,EAAiCD,IAAjC,CAA7C;AACP,OAAO,MAAME,UAAU,GAAIC,OAAD,IAAqBV,MAAM,CAACC,gBAAgB,CAACU,WAAlB,EAA+BD,OAA/B,CAA9C;AACP,OAAO,MAAME,UAAU,GAAIC,MAAD,IAAoBb,MAAM,CAACC,gBAAgB,CAACa,WAAlB,EAA+BD,MAA/B,CAA7C;AACP,OAAO,MAAME,YAAY,GAAIC,IAAD,IAA+BhB,MAAM,CAACC,gBAAgB,CAACgB,QAAlB,EAA4BD,IAA5B,CAA1D","sourcesContent":["import { action } from 'typesafe-actions'\nimport { TeamsActionTypes, Team, TeamSelectedPayload } from './types'\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const fetchRequest = () => action(TeamsActionTypes.FETCH_REQUEST)\nexport const clearSelected = () => action(TeamsActionTypes.CLEAR_SELECTED)\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const fetchSuccess = (data: Team[]) => action(TeamsActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(TeamsActionTypes.FETCH_ERROR, message)\nexport const selectTeam = (teamId: string) => action(TeamsActionTypes.SELECT_TEAM, teamId)\nexport const teamSelected = (team: TeamSelectedPayload) => action(TeamsActionTypes.SELECTED, team)\n"]},"metadata":{},"sourceType":"module"}