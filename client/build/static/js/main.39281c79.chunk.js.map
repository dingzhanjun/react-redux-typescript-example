{"version":3,"sources":["utils/styled.ts","components/layout/Root.tsx","store/layout/types.ts","containers/LayoutContainer.tsx","store/layout/actions.ts","components/layout/Container.tsx","components/layout/Header.tsx","components/layout/Footer.tsx","components/layout/Page.tsx","components/common/StateSelect.tsx","pages/index.tsx","components/common/GoTop.tsx","components/data/LoadingOverlay.tsx","components/data/LoadingOverlayInner.tsx","components/data/LoadingSpinner.tsx","store/videos/types.ts","store/videos/actions.ts","pages/videos.tsx","store/posts/types.ts","store/posts/actions.ts","pages/posts.tsx","pages/about.tsx","pages/404.tsx","styles/normalize.ts","styles/globals.ts","routes.tsx","styles/colors/brandColors.ts","styles/theme/dark.ts","styles/theme/light.ts","main.tsx","serviceWorker.ts","store/layout/reducer.ts","utils/api.ts","store/videos/sagas.ts","store/videos/reducer.ts","store/teams/types.ts","store/teams/actions.ts","store/teams/sagas.ts","store/teams/reducer.ts","store/posts/sagas.ts","store/posts/reducer.ts","store/index.ts","index.tsx","configureStore.ts"],"names":["styled","Root","children","Wrapper","props","theme","colors","background","body","fonts","LayoutActionTypes","LayoutContainer","render","useSelector","state","layout","dispatch","useDispatch","setTheme","color","action","SET_THEME","layoutActions","Container","widths","md","breakpoints","lg","xl","brand","white","headings","HeaderInner","HeaderLeft","HeaderNav","HeaderNavLink","NavLink","HeaderRight","Title","CurrentTheme","ThemeSwitcherButton","Header","title","exact","to","activeClassName","onClick","FooterInner","FooterNav","Footer","Page","containerPadding","states","value","label","StateSelect","options","isSearchable","placeholder","onChange","selectedOption","win","window","open","focus","IndexPage","PageContent","href","target","rel","Button","GoTop","React","position","setPosition","document","addEventListener","scrollY","scrollTo","scrollToTop","intervalId","setInterval","pageYOffset","scroll","scrollStepInPx","clearInterval","delayInMs","className","type","LoadingOverlay","transparentize","LoadingOverlayInner","LoadingSpinner","Spinner","CubeMove","keyframes","VideosActionTypes","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR","mapDispatchToProps","fetchRequest","filter","FETCH_REQUEST","connect","videos","loading","errors","result","total","fetchData","category","setCategory","JSON","stringify","ContentHeader","SelectContainer","TableWrapper","VideoList","map","video","key","id","YouTube","videoId","link","opts","renderData","PostsActionTypes","posts","PostList","post","index","NotFoundContent","NotFound","normalize","css","globals","Routes","styles","path","component","VideosPage","PostsPage","AboutPage","NotFoundPage","brandColors","black","gray75","gray60","gray50","gray40","gray30","gray20","gray10","gray5","yellow","red","green","lightTheme","borders","lighten","tableOdd","attrs","str","agi","int","monospace","fontSizes","h1","h2","h3","h4","xs","sm","heights","header","darken","Main","store","history","themes","Boolean","location","hostname","match","initialState","reducer","payload","async","callApi","method","url","fetch","headers","Accept","json","API_ENDPOINT","process","REACT_APP_API_ENDPOINT","handleFetch","res","call","error","put","err","Error","stack","watchFetchRequest","takeLatest","videosSaga","all","fork","undefined","TeamsActionTypes","teamSelected","team","SELECTED","handleSelect","detail","players","takeEvery","watchSelectTeam","SELECT_TEAM","heroesSaga","selected","CLEAR_SELECTED","postsSaga","createRootReducer","combineReducers","layoutReducer","videosReducer","postsReducer","teams","teamsReducer","router","connectRouter","rootSaga","teamsSaga","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","configureStore","INITIAL_REDUX_STATE","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39281c79.chunk.js","sourcesContent":["import styled, { CreateStyled } from '@emotion/styled'\n\nexport interface Theme {\n  colors: {\n    background: string\n    body: string\n    headings: string\n    borders: string\n    tableOdd: string\n    brand: string\n    black: string\n    white: string\n    attrs: {\n      str: string\n      agi: string\n      int: string\n    }\n  }\n  fonts: {\n    body: string\n    headings: string\n    monospace: string\n  }\n  fontSizes: {\n    h1: string\n    h2: string\n    h3: string\n    h4: string\n  }\n  containerPadding: string\n  breakpoints: {\n    xs: string\n    sm: string\n    md: string\n    lg: string\n    xl: string\n  }\n  widths: {\n    md: string\n    lg: string\n    xl: string\n  }\n  heights: {\n    header: string\n  }\n}\n\nexport default styled as CreateStyled<Theme>\n","import * as React from 'react';\nimport styled from '../../utils/styled';\n\ninterface RootProps {\n  className?: string;\n}\n\nconst Root: React.SFC<RootProps> = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nexport default Root;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.body};\n  font-family: ${props => props.theme.fonts.body};\n`;\n","// Example for using discriminated union types.\nexport type ThemeColors = 'light' | 'dark'\n\n// Use enums for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum LayoutActionTypes {\n  SET_THEME = '@@layout/SET_THEME'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface LayoutState {\n  readonly theme: ThemeColors\n}\n","import * as React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { ApplicationState } from '../store'\nimport { ThemeColors } from '../store/layout'\nimport * as layoutActions from '../store/layout/actions'\n\n// Now here is an example of creating container components.\n//\n// Before React v16 I would've suggested against implementing container components that are\n// separate from their connected view logic, since they intrude at the very definition of a view,\n// but now with newer patterns (e.g. render props), it makes sense to use them once again.\n//\n// See how this works at `./src/components/Header`\n\n// Redux-specific props.\ninterface LayoutContainerProps {\n  theme: ThemeColors\n  setTheme: (theme: ThemeColors) => void\n}\n\n// Wrapper props for render/children callback.\ninterface LayoutContainerRenderProps {\n  render?: (props: LayoutContainerProps) => React.ReactElement\n  children?: (props: LayoutContainerProps) => React.ReactElement\n}\n\nconst LayoutContainer: React.FC<LayoutContainerRenderProps> = ({ render, children }) => {\n  // We can use Hooks to call in our selector/dispatch functions.\n  const { theme } = useSelector((state: ApplicationState) => state.layout)\n  const dispatch = useDispatch()\n\n  // Create the `setTheme` handler. We use the `dispatch` we got from `useDispatch()` to create said selector.\n  const setTheme = (color: ThemeColors) => dispatch(layoutActions.setTheme(color))\n\n  // Create a render/children props wrapper with the above variables set as a callback.\n  if (render) {\n    return render({ theme, setTheme })\n  }\n\n  if (children) {\n    return children({ theme, setTheme })\n  }\n\n  return null\n}\n\nexport default LayoutContainer\n","import { action } from 'typesafe-actions'\n\nimport { LayoutActionTypes, ThemeColors } from './types'\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\n//\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\n\nexport const setTheme = (theme: ThemeColors) => action(LayoutActionTypes.SET_THEME, theme)\n","import styled from '../../utils/styled';\n\nconst Container = styled('div')`\n  margin: 0 auto;\n  width: 100%;\n  max-width: ${props => props.theme.widths.md};\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    max-width: ${props => props.theme.widths.lg};\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.xl}) {\n    max-width: ${props => props.theme.widths.xl};\n  }\n`;\n\nexport default Container;\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from '../../utils/styled';\nimport LayoutContainer from '../../containers/LayoutContainer';\nimport Container from './Container';\n\ninterface HeaderProps {\n  title: string;\n}\n\nconst Wrapper = styled('header')`\n  padding: 0.5rem 1.5rem;\n  background-color: ${props => props.theme.colors.brand};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fonts.headings};\n`;\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    flex-direction: row;\n  }\n`;\n\nconst HeaderLeft = styled('div')`\n  padding-right: 1rem;\n`;\n\nconst HeaderNav = styled('nav')`\n  flex: 1 1 auto;\n  margin: 1rem 0;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0;\n  }\n`;\n\nconst HeaderNavLink = styled(NavLink)`\n  margin: 0 1rem;\n\n  &.is-active {\n    text-decoration: underline;\n  }\n`;\n\nconst HeaderRight = styled('div')`\n  padding-left: 1rem;\n`;\n\nconst Title = styled('h2')`\n  margin: 0;\n  font-weight: 500;\n`;\n\nconst CurrentTheme = styled('span')`\n  margin-right: 1rem;\n`;\n\nconst ThemeSwitcherButton = styled('button')`\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  border: 1px solid ${props => props.theme.colors.white};\n  border-radius: 3px;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.brand};\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    color: ${props => props.theme.colors.white};\n  }\n`;\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <Wrapper>\n    <HeaderInner>\n      <HeaderLeft>\n        <Title>{title}</Title>\n      </HeaderLeft>\n      <HeaderNav>\n        <HeaderNavLink exact to=\"/\" activeClassName=\"is-active\">\n          Home\n        </HeaderNavLink>\n        <HeaderNavLink to=\"/videos\" activeClassName=\"is-active\">\n          Videos\n        </HeaderNavLink>\n        <HeaderNavLink to=\"/posts\" activeClassName=\"is-active\">\n          Posts\n        </HeaderNavLink>\n        <HeaderNavLink to=\"/about\" activeClassName=\"is-active\">\n          About\n        </HeaderNavLink>\n      </HeaderNav>\n      <HeaderRight>\n        <LayoutContainer>\n          {({ theme, setTheme }) => (\n            <>\n              <CurrentTheme>Current theme: {theme}</CurrentTheme>\n              <ThemeSwitcherButton onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>Switch theme</ThemeSwitcherButton>\n            </>\n          )}\n        </LayoutContainer>\n      </HeaderRight>\n    </HeaderInner>\n  </Wrapper>\n);\n\nexport default Header;\n","import * as React from 'react';\nimport styled from '../../utils/styled';\nimport LayoutContainer from '../../containers/LayoutContainer';\nimport Container from './Container';\n\nconst Wrapper = styled('footer')`\n  padding: 0.5rem 1.5rem;\n  background-color: ${props => props.theme.colors.brand};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fonts.headings};\n`;\n\nconst FooterInner = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    flex-direction: row;\n  }\n`;\n\nconst FooterLeft = styled('div')`\n  padding-right: 1rem;\n`;\n\nconst FooterNav = styled('nav')`\n  flex: 1 1 auto;\n  margin: 1rem 0;\n  text-align: center;\n\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    margin: 0;\n  }\n`;\n\nconst Footer: React.SFC = () => (\n  <Wrapper>\n    <FooterInner>\n      <FooterNav>\n        <h5>COVID-19 Is Here! No Panic, No Ignorant!</h5>\n      </FooterNav>\n    </FooterInner>\n  </Wrapper>\n);\n\nexport default Footer;\n","import styled from '../../utils/styled';\n\nconst Page = styled('div')`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  padding: ${props => props.theme.containerPadding};\n  padding-bottom: 3rem;\n`;\n\nexport default Page;\n","import * as React from 'react';\nimport Select, { ValueType } from 'react-select';\n\ninterface StateOption {\n  value: string;\n  label: string;\n}\n\nconst states: Array<StateOption> = [\n  { value: 'http://www.adph.org/', label: 'Alabama' },\n  { value: 'http://dhss.alaska.gov/Pages/default.aspx', label: 'Alaska' },\n  { value: 'https://www.americansamoa.gov/department-of-public-health', label: 'American Samoa' },\n  { value: 'http://www.azdhs.gov/', label: 'Arizona' },\n  { value: 'http://www.healthy.arkansas.gov/', label: 'Arkansas' },\n  { value: 'http://www.cdph.ca.gov/', label: 'California' },\n  { value: 'http://www.cdphe.state.co.us/', label: 'Colorado' },\n  { value: 'http://www.ct.gov/dph/', label: 'Connecticut' },\n  { value: 'https://www.dhss.delaware.gov/dhss/', label: 'Delaware' },\n  { value: 'http://doh.dc.gov/', label: 'District Of Columbia' },\n  { value: 'http://www.floridahealth.gov/', label: 'Florida' },\n  { value: 'http://www.dph.georgia.gov/', label: 'Georgia' },\n  { value: 'http://www.dphss.guam.gov/', label: 'Guam' },\n  { value: 'http://www.health.hawaii.gov/', label: 'Hawaii' },\n  { value: 'http://www.healthandwelfare.idaho.gov/', label: 'Idaho' },\n  { value: 'http://www.dph.illinois.gov/', label: 'Illinois' },\n  { value: 'http://www.state.in.us/isdh/', label: 'Indiana' },\n  { value: 'https://idph.iowa.gov/', label: 'Iowa' },\n  { value: 'http://www.kdheks.gov/', label: 'Kansas' },\n  { value: 'https://chfs.ky.gov/Pages/index.aspx', label: 'Kentucky' },\n  { value: 'http://www.dhh.louisiana.gov/', label: 'Louisiana' },\n  { value: 'http://www.maine.gov/dhhs/', label: 'Maine' },\n  { value: 'https://health.maryland.gov/pages/home.aspx', label: 'Maryland' },\n  { value: 'http://www.mass.gov/eohhs/gov/departments/dph/', label: 'Massachusetts' },\n  { value: 'http://www.michigan.gov/mdch', label: 'Michigan' },\n  { value: 'http://www.health.state.mn.us/', label: 'Minnesota' },\n  { value: 'http://www.msdh.state.ms.us/', label: 'Mississippi' },\n  { value: 'http://health.mo.gov/index.php', label: 'Missouri' },\n  { value: 'http://dphhs.mt.gov/', label: 'Montana' },\n  { value: 'http://dhhs.ne.gov/Pages/default.aspx', label: 'Nebraska' },\n  { value: 'http://dhhs.nv.gov/', label: 'Nevada' },\n  { value: 'http://www.dhhs.state.nh.us/', label: 'New Hampshire' },\n  { value: 'http://www.nj.gov/health/', label: 'New Jersey' },\n  { value: 'http://nmhealth.org/', label: 'New Mexico' },\n  { value: 'https://www.health.ny.gov/', label: 'New York' },\n  { value: 'http://www.ncdhhs.gov/', label: 'North Carolina' },\n  { value: 'https://www.ndhealth.gov/', label: 'North Dakota' },\n  { value: 'http://chcc.gov.mp/', label: 'Northern Mariana Islands' },\n  { value: 'https://www.odh.ohio.gov/', label: 'Ohio' },\n  { value: 'http://www.ok.gov/health/', label: 'Oklahoma' },\n  { value: 'https://public.health.oregon.gov/Pages/Home.aspx', label: 'Oregon' },\n  { value: 'http://www.health.pa.gov/Pages/default.aspx#.VSPjfPnF-aU', label: 'Pennsylvania' },\n  { value: 'http://www.salud.gov.pr/Pages/Home.aspx', label: 'Puerto Rico' },\n  { value: 'http://www.palauhealth.org/', label: 'Republic Of Palau' },\n  { value: 'http://www.rmiembassyus.org/index.php/about/marshall-islands/government', label: 'Republic Of The Marshall Islands' },\n  { value: 'http://www.health.ri.gov/', label: 'Rhode Island' },\n  { value: 'http://www.scdhec.gov/', label: 'South Carolina' },\n  { value: 'https://doh.sd.gov/', label: 'South Dakota' },\n  { value: 'https://www.tn.gov/health.html', label: 'Tennessee' },\n  { value: 'https://www.dshs.state.tx.us/', label: 'Texas' },\n  { value: 'https://doh.vi.gov/', label: 'U. S. Virgin Islands' },\n  { value: 'http://health.utah.gov/', label: 'Utah' },\n  { value: 'http://healthvermont.gov/', label: 'Vermont' },\n  { value: 'http://www.vdh.state.va.us/', label: 'Virginia' },\n  { value: 'http://www.doh.wa.gov/', label: 'Washington' },\n  { value: 'http://www.dhhr.wv.gov/Pages/default.aspx', label: 'West Virginia' },\n  { value: 'https://www.dhs.wisconsin.gov/', label: 'Wisconsin' },\n  { value: 'https://health.wyo.gov/', label: 'Wyoming' }\n];\n\ntype OptionType = { label: string; value: string };\n\nconst StateSelect: React.FC = () => {\n  return (\n    <Select\n      options={states}\n      isSearchable\n      placeholder=\"Please select your state...\"\n      onChange={(selectedOption: ValueType<OptionType>) => {\n        const { value } = selectedOption as OptionType;\n        const win = window.open(value, '_blank');\n        if (win != null) {\n          win.focus();\n        }\n      }}\n    />\n  );\n};\n\nexport default StateSelect;\n","import * as React from 'react';\nimport Page from '../components/layout/Page';\nimport Container from '../components/layout/Container';\nimport styled from '../utils/styled';\nimport StateSelect from '../components/common/StateSelect';\n\nfunction IndexPage() {\n  return (\n    <Page>\n      <Container>\n        <PageContent>\n          <h1>Welcome to All About COVID-19!</h1>\n          <h3>WHO announced COVID-19 outbreak a pandemic, you cannot be too serious about it.</h3>\n          <p>We collect COVID-19 information which may be helpful for you and want to keep you informed.</p>\n          <ul>\n            <li>\n              FAQ pages about COVID-19 by{' '}\n              <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\" target=\"blank\" rel=\"noopener noreferrer\">\n                CDC\n              </a>{' '}\n              and{' '}\n              <a href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\" target=\"blank\" rel=\"noopener noreferrer\">\n                WHO\n              </a>\n              .\n            </li>\n            <li>\n              A real-time tracker focuses attention on the U.S. and provides continuously updated state-level case counts for COVID-19\n              coronavirus in the United States. Click{' '}\n              <a\n                href=\"https://www.arcgis.com/apps/opsdashboard/index.html#/85320e2ea5424dfaaa75ae62e5c06e61\"\n                target=\"blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here\n              </a>{' '}\n              if you are visiting from a mobile device such as a smart phone, tablet and{' '}\n              <a\n                href=\"https://medpage.maps.arcgis.com/apps/opsdashboard/index.html#/c7dafaae988f4c07a13a9ede90e43a47\"\n                target=\"blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here\n              </a>{' '}\n              if you are visiting from your a desktop/laptop computer.\n            </li>\n            <li>\n              CDC has{' '}\n              <a href=\"https://www.cdc.gov/coronavirus/2019-nCoV/index.html\" target=\"blank\" rel=\"noopener noreferrer\">\n                comprehensive infomation\n              </a>{' '}\n              about COVID-19.\n            </li>\n            <li>\n              CDC also teaches you how to{' '}\n              <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/prepare/index.html\" target=\"blank\" rel=\"noopener noreferrer\">\n                prepare for\n              </a>{' '}\n              COVID-19.\n            </li>\n            <li>\n              Such a difficult situation is stressful, CDC has great infomation helping you{' '}\n              <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\" target=\"blank\" rel=\"noopener noreferrer\">\n                manage anxiety & stress.\n              </a>\n            </li>\n            <li>\n              Feeling ill and concerned? Have a{' '}\n              <a href=\"https://COVID19.morehealth.com\" target=\"blank\" rel=\"noopener noreferrer\">\n                Self-Assessment\n              </a>\n              .\n            </li>\n            <li>\n              You can help by{' '}\n              <a href=\"https://give4cdcf.org\" target=\"blank\" rel=\"noopener noreferrer\">\n                making donation\n              </a>{' '}\n              to CDC, please make sure the website address in your brower's address bar is <b>https://give4cdcf.org</b>\n            </li>\n            <li>\n              Bad guys are always around,{' '}\n              <a href=\"https://www.justice.gov/usao-wdpa/COVID-19-fraud-page\" target=\"blank\" rel=\"noopener noreferrer\">\n                check this out\n              </a>{' '}\n              to avoid being frauded.\n            </li>\n\n            <li>\n              Get more informed by{' '}\n              <a href=\"https://give4cdcf.org\" target=\"blank\" rel=\"noopener noreferrer\">\n                watching videos\n              </a>{' '}\n              and{' '}\n              <a href=\"https://give4cdcf.org\" target=\"blank\" rel=\"noopener noreferrer\">\n                reading online resources\n              </a>{' '}\n              collected for you.\n            </li>\n            <li>\n              <p>See more information from the Health Department of your state:</p>\n              <p>\n                <StateSelect />\n              </p>\n            </li>\n          </ul>\n        </PageContent>\n      </Container>\n    </Page>\n  );\n}\n\nexport default IndexPage;\n\nconst PageContent = styled('article')`\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  line-height: 1.6;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    margin-bottom: 0.5rem;\n    font-family: ${props => props.theme.fonts.headings};\n    line-height: 1.25;\n  }\n  h3 {\n    color: red;\n    line-height: 1;\n  }\n`;\n","import * as React from 'react';\nimport styled from '../../utils/styled';\n\ntype ScrollProps = {\n  scrollStepInPx: number;\n  delayInMs: number;\n};\n\nconst GoTop: React.FC<ScrollProps> = (props: ScrollProps) => {\n  // const [intervalId, setIntervalId] = React.useState(null);\n  const [position, setPosition] = React.useState(false);\n\n  React.useEffect(() => {\n    document.addEventListener('scroll', () => {\n      if (window.scrollY > 200) {\n        setPosition(true);\n      } else {\n        setPosition(false);\n      }\n    });\n    window.scrollTo(0, 0);\n  }, []);\n\n  const scrollToTop = () => {\n    let intervalId;\n    const onScrollStep = () => {\n      if (window.pageYOffset === 0) {\n        clearInterval(intervalId);\n        return;\n      }\n      window.scroll(0, window.pageYOffset - props.scrollStepInPx);\n    };\n\n    intervalId = setInterval(onScrollStep, props.delayInMs);\n  };\n\n  const renderGoTopIcon = () => {\n    if (position) {\n      return (\n        <Button className=\"go-top\" onClick={scrollToTop} type=\"button\">\n          Go Top\n        </Button>\n      );\n    }\n    return null;\n  };\n\n  return <>{renderGoTopIcon()}</>;\n};\n\nconst Button = styled('button')`\n  border: 0;\n  border-radius: 10px 0 0 10px;\n  position: fixed;\n  cursor: pointer;\n  bottom: 30px;\n  right: 0px;\n  color: white;\n  background-color: ${props => props.theme.colors.brand};\n  z-index: 1;\n  width: 90px;\n  text-align: center;\n  height: 45px;\n  line-height: 45px;\n  transition: 0.5s;\n`;\n\nexport default GoTop;\n","import { transparentize } from 'polished'\nimport styled from '../../utils/styled'\n\nconst LoadingOverlay = styled('div')`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n  background: ${props => transparentize(0.25, props.theme.colors.background)};\n`\n\nexport default LoadingOverlay\n","import styled from '../../utils/styled'\n\nconst LoadingOverlayInner = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n`\n\nexport default LoadingOverlayInner\n","import * as React from 'react'\nimport { keyframes } from '@emotion/core'\nimport styled from '../../utils/styled'\n\nconst LoadingSpinner: React.SFC = () => (\n  <Spinner>\n    <div className=\"cube1\" />\n    <div className=\"cube2\" />\n  </Spinner>\n)\n\nexport default LoadingSpinner\n\nconst CubeMove = keyframes`\n  25% {\n    transform: translateX(42px) rotate(-90deg) scale(0.5);\n    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n  } 50% {\n    transform: translateX(42px) translateY(42px) rotate(-179deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n  } 50.1% {\n    transform: translateX(42px) translateY(42px) rotate(-180deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n  } 75% {\n    transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n  } 100% {\n    transform: rotate(-360deg);\n    -webkit-transform: rotate(-360deg);\n  }\n`\n\nconst Spinner = styled('div')`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n\n  & .cube1,\n  & .cube2 {\n    background-color: ${props => props.theme.colors.brand};\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    -webkit-animation: ${CubeMove} 1.8s infinite ease-in-out;\n    animation: ${CubeMove} 1.8s infinite ease-in-out;\n  }\n\n  & .cube2 {\n    -webkit-animation-delay: -0.9s;\n    animation-delay: -0.9s;\n  }\n`\n","// This file holds our state type, as well as any other types related to this Redux store.\n\nexport interface Video {\n  id: number;\n  link: string;\n  title: string;\n}\n\nexport interface VideoResponse extends ApiResponse {\n  total: number;\n  videos: Video[];\n}\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>;\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum VideosActionTypes {\n  FETCH_REQUEST = '@@videos/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@videos/FETCH_SUCCESS',\n  FETCH_ERROR = '@@videos/FETCH_ERROR'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface VideosState {\n  readonly loading: boolean;\n  readonly data: VideoResponse;\n  readonly errors?: string;\n}\n","import { action } from 'typesafe-actions';\nimport { VideosActionTypes, Video } from './types';\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const fetchRequest = (filter: string) => action(VideosActionTypes.FETCH_REQUEST, filter);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const fetchSuccess = (data: Video[]) => action(VideosActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = (message: string) => action(VideosActionTypes.FETCH_ERROR, message);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport Select, { ValueType } from 'react-select';\nimport GoTop from '../components/common/GoTop';\n\nimport styled from '../utils/styled';\nimport Page from '../components/layout/Page';\nimport Container from '../components/layout/Container';\nimport LoadingOverlay from '../components/data/LoadingOverlay';\nimport LoadingOverlayInner from '../components/data/LoadingOverlayInner';\nimport LoadingSpinner from '../components/data/LoadingSpinner';\n\nimport { ApplicationState } from '../store';\nimport { Video } from '../store/videos/types';\nimport { fetchRequest } from '../store/videos/actions';\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean;\n  errors?: string;\n  videos: Video[];\n  total: number;\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n  fetchRequest: typeof fetchRequest;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nconst VideosIndexPage: React.FC<AllProps> = (props: AllProps) => {\n  const { loading, fetchRequest: fetchData } = props;\n  const [category, setCategory] = React.useState('');\n\n  React.useEffect(() => {\n    setCategory('what_is_it');\n  }, []);\n\n  React.useEffect(() => {\n    fetchData(JSON.stringify({ category }));\n  }, [category]);\n\n  const renderData = () => {\n    const { videos, total } = props;\n\n    return (\n      <VideoList>\n        {videos &&\n          videos.map(video => (\n            <tr key={video.id}>\n              <td>\n                <h6>{video.title}</h6>\n                <YouTube videoId={video.link} opts={{}} />\n              </td>\n            </tr>\n          ))}\n      </VideoList>\n    );\n  };\n\n  interface CategoryOption {\n    value: string;\n    label: string;\n  }\n\n  const cats: Array<CategoryOption> = [\n    { value: 'what_is_it', label: 'What is COVID-19/Coronavirus?' },\n    { value: 'how_does_it_feel', label: 'How does COVID-19 feel like?' },\n    { value: 'what_to_do', label: 'What to do to prevent COVID-19?' },\n    { value: 'by_cdc', label: 'Videos made for you by CDC' },\n    { value: 'funny_warm', label: 'Cheer Up, look at the bright side!' }\n  ];\n\n  return (\n    <Page>\n      <Container>\n        <ContentHeader>\n          <SelectContainer>\n            <Select\n              options={cats}\n              isSearchable={false}\n              placeholder=\"Please choose topic your are interested in ...\"\n              onChange={(selectedOption: ValueType<CategoryOption>) => {\n                const { value } = selectedOption as CategoryOption;\n                setCategory(value);\n              }}\n            />\n          </SelectContainer>\n        </ContentHeader>\n        <TableWrapper>\n          {loading && (\n            <LoadingOverlay>\n              <LoadingOverlayInner>\n                <LoadingSpinner />\n              </LoadingOverlayInner>\n            </LoadingOverlay>\n          )}\n          {renderData()}\n        </TableWrapper>\n      </Container>\n      <GoTop scrollStepInPx={50} delayInMs={20} />\n    </Page>\n  );\n};\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ videos }: ApplicationState) => ({\n  loading: videos.loading,\n  errors: videos.errors,\n  videos: videos.data.result,\n  total: videos.data.total\n});\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n  fetchRequest\n};\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VideosIndexPage);\n\nconst VideoList = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  align-items: center;\n  h6 {\n    margin-top: 15px;\n  }\n`;\n\nconst ContentHeader = styled('div')`\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst TableWrapper = styled('div')`\n  position: relative;\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  min-height: 200px;\n`;\n\nconst SelectContainer = styled('div')`\n  position: relative;\n  @media (min-width: ${props => props.theme.breakpoints.lg}) {\n    max-width: 400px;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.xl}) {\n    max-width: 400px;\n  }\n\n  max-width: 100%;\n  margin: 0 auto;\n  min-height: 60px;\n  margin-top: 20px;\n`;\n","// This file holds our state type, as well as any other types related to this Redux store.\n\nexport interface Post {\n  id: number;\n  link: string;\n  title: string;\n}\n\nexport interface PostResponse extends ApiResponse {\n  total: number;\n  posts: Post[];\n}\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>;\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum PostsActionTypes {\n  FETCH_REQUEST = '@@posts/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@posts/FETCH_SUCCESS',\n  FETCH_ERROR = '@@posts/FETCH_ERROR'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface PostsState {\n  readonly loading: boolean;\n  readonly data: PostResponse;\n  readonly errors?: string;\n}\n","import { action } from 'typesafe-actions';\nimport { PostsActionTypes, Post } from './types';\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const fetchRequest = (filter: string) => action(PostsActionTypes.FETCH_REQUEST, filter);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const fetchSuccess = (data: Post[]) => action(PostsActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = (message: string) => action(PostsActionTypes.FETCH_ERROR, message);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport GoTop from '../components/common/GoTop';\n\nimport styled from '../utils/styled';\nimport Page from '../components/layout/Page';\nimport Container from '../components/layout/Container';\nimport LoadingOverlay from '../components/data/LoadingOverlay';\nimport LoadingOverlayInner from '../components/data/LoadingOverlayInner';\nimport LoadingSpinner from '../components/data/LoadingSpinner';\n\nimport { ApplicationState } from '../store';\nimport { Post } from '../store/posts/types';\nimport { fetchRequest } from '../store/posts/actions';\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n  loading: boolean;\n  errors?: string;\n  posts: Post[];\n  total: number;\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n  fetchRequest: typeof fetchRequest;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nconst PostsIndexPage: React.FC<AllProps> = (props: AllProps) => {\n  const { loading, fetchRequest: fetchData } = props;\n\n  React.useEffect(() => {\n    fetchData('');\n  }, []);\n\n  const renderData = () => {\n    const { posts } = props;\n\n    return (\n      <PostList>\n        {posts &&\n          posts.map((post, index) => (\n            <div key={post.id}>\n              <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <h6>\n                  {index + 1}\n                  {'. '}\n                  {post.title}\n                </h6>\n              </a>\n            </div>\n          ))}\n      </PostList>\n    );\n  };\n\n  return (\n    <Page>\n      <Container>\n        <ContentHeader>\n          <h5>Read through to get informed, prepared and peace.</h5>\n        </ContentHeader>\n        <TableWrapper>\n          {loading && (\n            <LoadingOverlay>\n              <LoadingOverlayInner>\n                <LoadingSpinner />\n              </LoadingOverlayInner>\n            </LoadingOverlay>\n          )}\n          {renderData()}\n        </TableWrapper>\n      </Container>\n      <GoTop scrollStepInPx={50} delayInMs={20} />\n    </Page>\n  );\n};\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ posts }: ApplicationState) => ({\n  loading: posts.loading,\n  errors: posts.errors,\n  posts: posts.data.result,\n  total: posts.data.total\n});\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n  fetchRequest\n};\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostsIndexPage);\n\nconst PostList = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  align-items: left;\n  h6 {\n    margin-top: 15px;\n  }\n\n  td {\n    text-align: left;\n  }\n`;\n\nconst ContentHeader = styled('div')`\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst TableWrapper = styled('div')`\n  position: relative;\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  min-height: 200px;\n`;\n","import * as React from 'react';\nimport Page from '../components/layout/Page';\nimport Container from '../components/layout/Container';\nimport styled from '../utils/styled';\n\nfunction IndexPage() {\n  return (\n    <Page>\n      <Container>\n        <PageContent>\n          <h1>Welcome to All About COVID-19!</h1>\n          <p>\n            COVID-19 is here, everyone is talking about it and everyone is impacted by it to some extent no mater who you are. There is too\n            much information and misinformation, it is so seay to get overwhelmed or mislead by them. We are dedicated to helping you have\n            good-enough knowledge by collecting COVID-19 information on the Internet, which we think may be helpful for you and want to keep\n            you informed. You are welcome to share <b>AllAboutCovid19.info</b> with your family and friends.\n          </p>\n          <p>\n            Please be noted, we just put the links together on this website, we do not host any data(copyrighed by others) on our server.\n            All Videos are from Youtube.com and posts are sourced from various websites.\n          </p>\n          <p>You are encouraged to seek more information on your own.</p>\n          <p>Be informed, Be Healthy!</p>\n          <p>\n            Suggestions or Questions? drop me a line: <a href=\"mailto:allaboutcovid@gmail.com\">allaboutcovid@gmail.com</a>\n          </p>\n        </PageContent>\n      </Container>\n    </Page>\n  );\n}\n\nexport default IndexPage;\n\nconst PageContent = styled('article')`\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  line-height: 1.6;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    margin-bottom: 0.5rem;\n    font-family: ${props => props.theme.fonts.headings};\n    line-height: 1.25;\n  }\n  h3 {\n    color: red;\n    line-height: 1;\n  }\n`;\n","import * as React from 'react';\nimport styled from '../utils/styled';\nimport Page from '../components/layout/Page';\nimport Container from '../components/layout/Container';\n\nconst NotFound: React.FC = () => {\n  return (\n    <Page>\n      <Container>\n        <NotFoundContent>\n          <span>Got Lost?</span>\n          <a href=\"/\">Continue</a>\n        </NotFoundContent>\n      </Container>\n    </Page>\n  );\n};\n\nconst NotFoundContent = styled('div')`\n  text-align: center;\n  flexg-row: 1;\n  min-height: 100%;\n  min-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default NotFound;\n","import { css } from '@emotion/core'\n\nconst normalize = css`\n  /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n  /* Document\n    ========================================================================== */\n\n  /**\n  * Use a better box model (opinionated).\n  */\n\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  /**\n  * Use a more readable tab size (opinionated).\n  */\n\n  :root {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n\n  /**\n  * Correct the line height in all browsers.\n  */\n\n  html {\n    line-height: 1.15;\n  }\n\n  /* Sections\n    ========================================================================== */\n\n  /**\n  * Remove the margin in all browsers.\n  */\n\n  body {\n    margin: 0;\n  }\n\n  /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n      'Segoe UI Symbol';\n  }\n\n  /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n\n  /* Grouping content\n    ========================================================================== */\n\n  /**\n  * Add the correct height in Firefox.\n  */\n\n  hr {\n    height: 0;\n  }\n\n  /* Text-level semantics\n    ========================================================================== */\n\n  /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n\n  /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /**\n  * Add the correct font size in all browsers.\n  */\n\n  small {\n    font-size: 80%;\n  }\n\n  /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /* Forms\n    ========================================================================== */\n\n  /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n\n  /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n\n  /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n\n  /**\n  * Remove the inner border and padding in Firefox.\n  */\n\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\n  * Restore the focus styles unset by the previous rule.\n  */\n\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  /**\n  * Correct the padding in Firefox.\n  */\n\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n\n  /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n\n  legend {\n    padding: 0;\n  }\n\n  /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /* Interactive\n    ========================================================================== */\n\n  /*\n  * Add the correct display in Edge and Firefox.\n  */\n\n  details {\n    display: block;\n  }\n\n  /*\n  * Add the correct display in all browsers.\n  */\n\n  summary {\n    display: list-item;\n  }\n`\n\nexport default normalize\n","import { css } from '@emotion/core'\n\nconst globals = css`\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    position: relative;\n    vertical-align: middle;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n`\n\nexport default globals\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Global } from '@emotion/core';\n\nimport Root from './components/layout/Root';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport IndexPage from './pages/index';\nimport VideosPage from './pages/videos';\nimport PostsPage from './pages/posts';\nimport AboutPage from './pages/about';\nimport NotFoundPage from './pages/404';\nimport normalize from './styles/normalize';\nimport globals from './styles/globals';\n\n// If your app is big + you have routes with a lot of components, you should consider\n// code-splitting your routes! If you bundle stuff up with Webpack, I recommend `react-loadable`.\n//\n// $ yarn add react-loadable\n// $ yarn add --dev @types/react-loadable\n//\n// The given `pages/` directory provides an example of a directory structure that's easily\n// code-splittable.\n\nconst Routes: React.SFC = () => (\n  <Root>\n    <Global styles={normalize} />\n    <Global styles={globals} />\n    <Header title=\"All About COVID-19\" />\n    <Switch>\n      <Route exact path=\"/\" component={IndexPage} />\n      <Route path=\"/videos\" component={VideosPage} />\n      <Route path=\"/posts\" component={PostsPage} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route component={NotFoundPage} />\n    </Switch>\n    <Footer />\n  </Root>\n);\n\nexport default Routes;\n","const brandColors = {\n  black: '#000000',\n  gray75: '#2e2e2c',\n  gray60: '#666666',\n  gray50: '#7f7f7f',\n  gray40: '#999999',\n  gray30: '#b2b2b2',\n  gray20: '#cccccc',\n  gray10: '#e5e5e5',\n  gray5: '#ebebea',\n  white: '#fefefe',\n  yellow: '#f3df49',\n  red: '#eb5558',\n  green: '#9ee79a'\n}\n\nexport default brandColors\n","import { lighten } from 'polished'\nimport { Theme } from '../../utils/styled'\nimport brandColors from '../colors/brandColors'\n\nconst lightTheme: Theme = {\n  colors: {\n    background: brandColors.gray75,\n    body: brandColors.gray10,\n    headings: brandColors.gray5,\n    black: brandColors.black,\n    white: brandColors.white,\n    borders: lighten(0.05, brandColors.gray75),\n    tableOdd: lighten(0.025, brandColors.gray75),\n    brand: brandColors.red,\n    attrs: {\n      str: '#f44336',\n      agi: '#39d402',\n      int: '#01a9f4'\n    }\n  },\n  fonts: {\n    headings:\n      // eslint-disable-next-line max-len\n      \"'IBM Plex Sans', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif\",\n    body:\n      // eslint-disable-next-line max-len\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif',\n    monospace: \"'IBM Plex Mono', Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace, monospace\"\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem'\n  },\n  containerPadding: '1.5rem',\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px'\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px'\n  },\n  heights: {\n    header: '60px'\n  }\n}\n\nexport default lightTheme\n","import { darken } from 'polished'\nimport { Theme } from '../../utils/styled'\nimport brandColors from '../colors/brandColors'\n\nconst lightTheme: Theme = {\n  colors: {\n    background: brandColors.gray5,\n    body: brandColors.gray75,\n    headings: brandColors.black,\n    black: brandColors.black,\n    white: brandColors.white,\n    borders: darken(0.05, brandColors.gray5),\n    tableOdd: darken(0.025, brandColors.gray5),\n    brand: brandColors.red,\n    attrs: {\n      str: '#f44336',\n      agi: '#39d402',\n      int: '#01a9f4'\n    }\n  },\n  fonts: {\n    headings:\n      // eslint-disable-next-line max-len\n      \"'IBM Plex Sans', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell,  Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif\",\n    body:\n      // eslint-disable-next-line max-len\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif',\n    monospace: \"'IBM Plex Mono', Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace, monospace\"\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem'\n  },\n  containerPadding: '1.5rem',\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px'\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px'\n  },\n  heights: {\n    header: '60px'\n  }\n}\n\nexport default lightTheme\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Store } from 'redux';\nimport { History } from 'history';\nimport { ThemeProvider } from 'emotion-theming';\n\nimport Routes from './routes';\nimport { ApplicationState } from './store';\nimport LayoutContainer from './containers/LayoutContainer';\nimport * as themes from './styles/theme';\n\n// Any additional component props go here.\ninterface MainProps {\n  store: Store<ApplicationState>;\n  history: History;\n}\n\n// Create an intersection type of the component props and our Redux props.\nconst Main: React.FC<MainProps> = ({ store, history }) => {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <LayoutContainer>\n          {({ theme }) => (\n            <ThemeProvider theme={themes[theme]}>\n              <Routes />\n            </ThemeProvider>\n          )}\n        </LayoutContainer>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\n// Normally you wouldn't need any generics here (since types infer from the passed functions).\n// But since we pass some props from the `index.js` file, we have to include them.\n// For an example of a `connect` function without generics, see `./containers/LayoutContainer`.\nexport default Main;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ')\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.')\n\n                // Execute callback\n                if (config.onUpdate) {\n                  config.onUpdate(registration)\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.')\n\n                // Execute callback\n                if (config.onSuccess) {\n                  config.onSuccess(registration)\n                }\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { Reducer } from 'redux'\nimport { LayoutState, LayoutActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: LayoutState = {\n  theme: 'light'\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<LayoutState> = (state = initialState, action) => {\n  switch (action.type) {\n    case LayoutActionTypes.SET_THEME: {\n      return { ...state, theme: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as layoutReducer }\n","export async function callApi(method: string, url: string, path: string, data?: any) {\n  const res = await fetch(`${url}/api${path}`, {\n    method,\n    headers: {\n      Accept: 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  return res.json();\n}\n","import { all, call, fork, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { VideosActionTypes } from './types';\nimport { fetchError, fetchSuccess } from './actions';\nimport { callApi } from '../../utils/api';\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://allaboutcovid19.info';\n\nfunction* handleFetch(action) {\n  try {\n    // To call async functions, use redux-saga's `call()`.\n    const res = yield call(callApi, 'get', API_ENDPOINT, `/videos?filter=${action.payload}`);\n\n    if (res.error) {\n      yield put(fetchError(res.error));\n    } else {\n      yield put(fetchSuccess(res));\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack));\n    } else {\n      yield put(fetchError('An unknown error occured.'));\n    }\n  }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction* watchFetchRequest() {\n  yield takeLatest(VideosActionTypes.FETCH_REQUEST, handleFetch);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction* videosSaga() {\n  yield all([fork(watchFetchRequest)]);\n}\n\nexport default videosSaga;\n","import { Reducer } from 'redux';\nimport { VideosState, VideosActionTypes } from './types';\n\n// Type-safe initialState!\nexport const initialState: VideosState = {\n  data: { videos: [], total: 0 },\n  errors: undefined,\n  loading: false\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<VideosState> = (state = initialState, action) => {\n  switch (action.type) {\n    case VideosActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case VideosActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload };\n    }\n    case VideosActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as videosReducer };\n","// This file holds our state type, as well as any other types related to this Redux store.\n\n// Response object for GET /teams\n// https://docs.opendota.com/#tag/teams%2Fpaths%2F~1teams%2Fget\nexport interface Team {\n  team_id: number\n  rating: number\n  wins: number\n  losses: number\n  last_match_time: number\n  name: string\n  tag?: string\n  logo_url?: string\n}\n\nexport interface Player {\n  account_id: number\n  name: string\n  games_played: number\n  wins: number\n  is_current_team_member: boolean\n}\n\nexport interface TeamSelectedPayload {\n  detail: Team\n  players: Player[]\n}\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum TeamsActionTypes {\n  FETCH_REQUEST = '@@teams/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@teams/FETCH_SUCCESS',\n  FETCH_ERROR = '@@teams/FETCH_ERROR',\n  SELECT_TEAM = '@@teams/SELECT_TEAM',\n  SELECTED = '@@teams/SELECTED',\n  CLEAR_SELECTED = '@@teams/CLEAR_SELECTED'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface TeamsState {\n  readonly loading: boolean\n  readonly data: Team[]\n  readonly selected?: TeamSelectedPayload\n  readonly errors?: string\n}\n","import { action } from 'typesafe-actions'\nimport { TeamsActionTypes, Team, TeamSelectedPayload } from './types'\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const fetchRequest = () => action(TeamsActionTypes.FETCH_REQUEST)\nexport const clearSelected = () => action(TeamsActionTypes.CLEAR_SELECTED)\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const fetchSuccess = (data: Team[]) => action(TeamsActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(TeamsActionTypes.FETCH_ERROR, message)\nexport const selectTeam = (teamId: string) => action(TeamsActionTypes.SELECT_TEAM, teamId)\nexport const teamSelected = (team: TeamSelectedPayload) => action(TeamsActionTypes.SELECTED, team)\n","import { all, call, fork, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { TeamsActionTypes } from './types';\nimport { fetchError, fetchSuccess, selectTeam, teamSelected } from './actions';\nimport { callApi } from '../../utils/api';\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com';\n\nfunction* handleFetch() {\n  try {\n    // To call async functions, use redux-saga's `call()`.\n    const res = yield call(callApi, 'get', API_ENDPOINT, '/teams');\n\n    if (res.error) {\n      yield put(fetchError(res.error));\n    } else {\n      yield put(fetchSuccess(res));\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack));\n    } else {\n      yield put(fetchError('An unknown error occured.'));\n    }\n  }\n}\n\nfunction* handleSelect(action: ReturnType<typeof selectTeam>) {\n  try {\n    const detail = yield call(callApi, 'get', API_ENDPOINT, `/teams/${action.payload}`);\n    const players = yield call(callApi, 'get', API_ENDPOINT, `/teams/${action.payload}/players`);\n\n    if (detail.error || players.error) {\n      yield put(fetchError(detail.error || players.error));\n    } else {\n      yield put(teamSelected({ detail, players }));\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack));\n    } else {\n      yield put(fetchError('An unknown error occured.'));\n    }\n  }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction* watchFetchRequest() {\n  yield takeEvery(TeamsActionTypes.FETCH_REQUEST, handleFetch);\n}\n\nfunction* watchSelectTeam() {\n  yield takeLatest(TeamsActionTypes.SELECT_TEAM, handleSelect);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction* heroesSaga() {\n  yield all([fork(watchFetchRequest), fork(watchSelectTeam)]);\n}\n\nexport default heroesSaga;\n","import { Reducer } from 'redux';\nimport { TeamsState, TeamsActionTypes } from './types';\n\n// Type-safe initialState!\nexport const initialState: TeamsState = {\n  data: [],\n  errors: undefined,\n  selected: undefined,\n  loading: false\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<TeamsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case TeamsActionTypes.FETCH_REQUEST:\n    case TeamsActionTypes.SELECT_TEAM: {\n      return { ...state, loading: true };\n    }\n    case TeamsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload };\n    }\n    case TeamsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    case TeamsActionTypes.SELECTED: {\n      return { ...state, loading: false, selected: action.payload };\n    }\n    case TeamsActionTypes.CLEAR_SELECTED: {\n      return { ...state, selected: undefined };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as teamsReducer };\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { PostsActionTypes } from './types';\nimport { fetchError, fetchSuccess } from './actions';\nimport { callApi } from '../../utils/api';\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://allaboutcovid19.info';\n\nfunction* handleFetch(action) {\n  try {\n    // To call async functions, use redux-saga's `call()`.\n    const res = yield call(callApi, 'get', API_ENDPOINT, `/blogs?filter=${action.payload}`);\n\n    if (res.error) {\n      yield put(fetchError(res.error));\n    } else {\n      yield put(fetchSuccess(res));\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack));\n    } else {\n      yield put(fetchError('An unknown error occured.'));\n    }\n  }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction* watchFetchRequest() {\n  yield takeEvery(PostsActionTypes.FETCH_REQUEST, handleFetch);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction* postsSaga() {\n  yield all([fork(watchFetchRequest)]);\n}\n\nexport default postsSaga;\n","import { Reducer } from 'redux';\nimport { PostsState, PostsActionTypes } from './types';\n\n// Type-safe initialState!\nexport const initialState: PostsState = {\n  data: { posts: [], total: 0 },\n  errors: undefined,\n  loading: false\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<PostsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case PostsActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case PostsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload };\n    }\n    case PostsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as postsReducer };\n","import { combineReducers } from 'redux';\nimport { all, fork } from 'redux-saga/effects';\nimport { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\n\nimport { LayoutState, layoutReducer } from './layout';\n\nimport videosSaga from './videos/sagas';\nimport { videosReducer } from './videos/reducer';\nimport { VideosState } from './videos/types';\nimport teamsSaga from './teams/sagas';\nimport { TeamsState } from './teams/types';\nimport { teamsReducer } from './teams/reducer';\nimport postsSaga from './posts/sagas';\nimport { postsReducer } from './posts/reducer';\nimport { PostsState } from './posts/types';\n\n// The top-level state object\nexport interface ApplicationState {\n  layout: LayoutState;\n  videos: VideosState;\n  posts: PostsState;\n  teams: TeamsState;\n  router: RouterState;\n}\n\n// Whenever an action is dispatched, Redux will update each top-level application state property\n// using the reducer with the matching name. It's important that the names match exactly, and that\n// the reducer acts on the corresponding ApplicationState property type.\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    layout: layoutReducer,\n    videos: videosReducer,\n    posts: postsReducer,\n    teams: teamsReducer,\n    router: connectRouter(history)\n  });\n\n// Here we use `redux-saga` to trigger actions asynchronously. `redux-saga` uses something called a\n// \"generator function\", which you can read about here:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\nexport function* rootSaga() {\n  yield all([fork(videosSaga), fork(postsSaga), fork(teamsSaga)]);\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nimport Main from './main'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './configureStore'\n\nimport 'typeface-ibm-plex-sans'\n\n// We use hash history because this example is going to be hosted statically.\n// Normally you would use browser history.\nconst history = createBrowserHistory()\n\nconst initialState = window.INITIAL_REDUX_STATE\nconst store = configureStore(history, initialState)\n\nReactDOM.render(<Main store={store} history={history} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { Store, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n// `react-router-redux` is deprecated, so we use `connected-react-router`.\n// This provides a Redux middleware which connects to our `react-router` instance.\nimport { routerMiddleware } from 'connected-react-router'\n// We'll be using Redux Devtools. We can use the `composeWithDevTools()`\n// directive so we can pass our middleware along with it\nimport { composeWithDevTools } from 'redux-devtools-extension'\n// If you use react-router, don't forget to pass in your history type.\nimport { History } from 'history'\n\n// Import the state interface and our combined reducers/sagas.\nimport { ApplicationState, createRootReducer, rootSaga } from './store'\n\nexport default function configureStore(history: History, initialState: ApplicationState): Store<ApplicationState> {\n  // create the composing function for our middlewares\n  const composeEnhancers = composeWithDevTools({})\n  // create the redux-saga middleware\n  const sagaMiddleware = createSagaMiddleware()\n\n  // We'll create our store with the combined reducers/sagas, and the initial Redux state that\n  // we'll be passing from our entry point.\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  )\n\n  // Don't forget to run the root saga, and return the store object.\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n"],"sourceRoot":""}